color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "10"),
group = "Oct (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11"),
group = "Nov (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11-24"),
group = "Nov 24 (year-round)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "12"),
group = "Dec",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolylines(data = lanes %>% filter(type == "Year-round"),
group = "Year-Round Lanes",
color = "green",
opacity = 1,
weight = 2.5) %>%
addPolylines(data = lanes %>% filter(type == "Summer"),
group = "Summer Lanes",
color = "blue",
opacity = 1,
weight = 2.5) %>%
addLayersControl(baseGroups = c("Feb", "Mar", "Apr",
"Apr 15 (summer)",
"Jun (summer)", "Jul (summer)",
"Aug (summer)", "Sep (summer)",
"Oct (summer)", "Nov (summer)",
"Nov 24 (year-round)", "Dec"),
overlayGroups = c("Year-Round Lanes", "Summer Lanes"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft") %>%
hideGroup("Summer Lanes") %>%
addLegend(position = "topleft",
pal = pal,
values = c(1,5,10,25,50,75,100),
opacity = 0.9) %>%
htmlwidgets::onRender("function(el, x) {
this.on('baselayerchange',
function(e) {e.layer.bringToBack();})
}")
map
)
saveWidget(map, file = here("output",str_c("AIS_2020_monthly_map_v2.html")))
library(stringr)
library(tidyverse)
library(here)
library(sf)
library(leaflet)
#library(leaftime)
library(htmlwidgets)
domain <- st_read(here("data", "domain.shp"), quiet = TRUE)
lanes <- st_read(here("data", "towlanes_2019.shp"), quiet = TRUE)
dat.comb <- read_sf(here("data","large_data", str_c("AIS_2020_all_monthly_grid.shp")))
dat.comb$month
pal <- colorBin(palette = "YlOrRd", domain = dat.comb$count, bins = c(1,5,25,50,100))
pal <- colorBin(palette = "YlOrRd", domain = dat.comb$count, bins = c(0,1,5,25,50,100))
# for summer map, comment hideGroup() call to show summer lanes
map <- leaflet() %>%
addTiles() %>%
addPolygons(data = dat.comb %>% filter(month == "02"),
group = "Feb",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "03"),
group = "Mar",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04"),
group = "Apr",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04-15"),
group = "Apr 15 (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "05"),
group = "May (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "06"),
group = "Jun (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "07"),
group = "Jul (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "08"),
group = "Aug (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "09"),
group = "Sep (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "10"),
group = "Oct (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11"),
group = "Nov (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11-24"),
group = "Nov 24 (year-round)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "12"),
group = "Dec",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolylines(data = lanes %>% filter(type == "Year-round"),
group = "Year-Round Lanes",
color = "blue",
opacity = 1,
weight = 2.5) %>%
addPolylines(data = lanes %>% filter(type == "Summer"),
group = "Summer Lanes",
color = "green",
opacity = 1,
weight = 2.5) %>%
addLayersControl(baseGroups = c("Feb", "Mar", "Apr",
"Apr 15 (summer)",
"Jun (summer)", "Jul (summer)",
"Aug (summer)", "Sep (summer)",
"Oct (summer)", "Nov (summer)",
"Nov 24 (year-round)", "Dec"),
overlayGroups = c("Year-Round Lanes", "Summer Lanes"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft") %>%
hideGroup("Summer Lanes") %>%
addLegend(position = "topleft",
pal = pal,
values = c(1,5,10,25,50,75,100),
opacity = 0.9) %>%
htmlwidgets::onRender("function(el, x) {
this.on('baselayerchange',
function(e) {e.layer.bringToBack();})
}")
saveWidget(map, file = here("output",str_c("AIS_2020_monthly_map_v2.html")))
pal <- colorBin(palette = "YlOrRd", domain = dat.comb$count, bins = c(1,2,5,25,50,100))
# for summer map, comment hideGroup() call to show summer lanes
map <- leaflet() %>%
addTiles() %>%
addPolygons(data = dat.comb %>% filter(month == "02"),
group = "Feb",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "03"),
group = "Mar",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04"),
group = "Apr",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04-15"),
group = "Apr 15 (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "05"),
group = "May (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "06"),
group = "Jun (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "07"),
group = "Jul (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "08"),
group = "Aug (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "09"),
group = "Sep (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "10"),
group = "Oct (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11"),
group = "Nov (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11-24"),
group = "Nov 24 (year-round)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "12"),
group = "Dec",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolylines(data = lanes %>% filter(type == "Year-round"),
group = "Year-Round Lanes",
color = "blue",
opacity = 1,
weight = 2.5) %>%
addPolylines(data = lanes %>% filter(type == "Summer"),
group = "Summer Lanes",
color = "green",
opacity = 1,
weight = 2.5) %>%
addLayersControl(baseGroups = c("Feb", "Mar", "Apr",
"Apr 15 (summer)",
"Jun (summer)", "Jul (summer)",
"Aug (summer)", "Sep (summer)",
"Oct (summer)", "Nov (summer)",
"Nov 24 (year-round)", "Dec"),
overlayGroups = c("Year-Round Lanes", "Summer Lanes"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft") %>%
hideGroup("Summer Lanes") %>%
addLegend(position = "topleft",
pal = pal,
values = c(1,5,10,25,50,75,100),
opacity = 0.9) %>%
htmlwidgets::onRender("function(el, x) {
this.on('baselayerchange',
function(e) {e.layer.bringToBack();})
}")
saveWidget(map, file = here("output",str_c("AIS_2020_monthly_map_v2.html")))
pal <- colorBin(palette = "YlOrRd", domain = dat.comb$count, bins = c(1,5,25,50,100))
# for summer map, comment hideGroup() call to show summer lanes
map <- leaflet() %>%
addTiles() %>%
addPolygons(data = dat.comb %>% filter(month == "02"),
group = "Feb",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "03"),
group = "Mar",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04"),
group = "Apr",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04-15"),
group = "Apr 15 (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "05"),
group = "May (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "06"),
group = "Jun (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "07"),
group = "Jul (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "08"),
group = "Aug (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "09"),
group = "Sep (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "10"),
group = "Oct (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11"),
group = "Nov (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11-24"),
group = "Nov 24 (year-round)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "12"),
group = "Dec",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolylines(data = lanes %>% filter(type == "Year-round"),
group = "Year-Round Lanes",
color = "blue",
opacity = 1,
weight = 2.5) %>%
addPolylines(data = lanes %>% filter(type == "Summer"),
group = "Summer Lanes",
color = "#66ff00",
opacity = 1,
weight = 2.5) %>%
addLayersControl(baseGroups = c("Feb", "Mar", "Apr",
"Apr 15 (summer)",
"Jun (summer)", "Jul (summer)",
"Aug (summer)", "Sep (summer)",
"Oct (summer)", "Nov (summer)",
"Nov 24 (year-round)", "Dec"),
overlayGroups = c("Year-Round Lanes", "Summer Lanes"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft") %>%
hideGroup("Summer Lanes") %>%
addLegend(position = "topleft",
pal = pal,
values = c(1,5,10,25,50,75,100),
opacity = 0.9) %>%
htmlwidgets::onRender("function(el, x) {
this.on('baselayerchange',
function(e) {e.layer.bringToBack();})
}")
saveWidget(map, file = here("output",str_c("AIS_2020_monthly_map_v2.html")))
# for summer map, comment hideGroup() call to show summer lanes
map <- leaflet() %>%
addTiles() %>%
addPolygons(data = dat.comb %>% filter(month == "02"),
group = "Feb",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "03"),
group = "Mar",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04"),
group = "Apr",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "04-15"),
group = "Apr 15 (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "05"),
group = "May (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "06"),
group = "Jun (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "07"),
group = "Jul (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "08"),
group = "Aug (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "09"),
group = "Sep (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "10"),
group = "Oct (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11"),
group = "Nov (summer)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "11-24"),
group = "Nov 24 (year-round)",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolygons(data = dat.comb %>% filter(month == "12"),
group = "Dec",
fillColor = ~pal(count),
fillOpacity = 0.9,
color = "gray",
weight = 0.15) %>%
addPolylines(data = lanes %>% filter(type == "Year-round"),
group = "Year-Round Lanes",
color = "blue",
opacity = 1,
weight = 2.5) %>%
addPolylines(data = lanes %>% filter(type == "Summer"),
group = "Summer Lanes",
color = "green",
opacity = 1,
weight = 2.5) %>%
addLayersControl(baseGroups = c("Feb", "Mar", "Apr",
"Apr 15 (summer)",
"Jun (summer)", "Jul (summer)",
"Aug (summer)", "Sep (summer)",
"Oct (summer)", "Nov (summer)",
"Nov 24 (year-round)", "Dec"),
overlayGroups = c("Year-Round Lanes", "Summer Lanes"),
options = layersControlOptions(collapsed = FALSE),
position = "topleft") %>%
hideGroup("Summer Lanes") %>%
addLegend(position = "topleft",
pal = pal,
values = c(1,5,10,25,50,75,100),
opacity = 0.9) %>%
htmlwidgets::onRender("function(el, x) {
this.on('baselayerchange',
function(e) {e.layer.bringToBack();})
}")
saveWidget(map, file = here("output",str_c("AIS_2020_monthly_map_v2.html")))
